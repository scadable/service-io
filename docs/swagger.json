{
    "swagger": "2.0",
    "info": {
        "description": "This is the API for the service-io device onboarding microservice.",
        "title": "service-io API",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:9090",
    "basePath": "/",
    "paths": {
        "/devices": {
            "get": {
                "description": "Retrieves a list of all device adapters from the database.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "devices"
                ],
                "summary": "List all devices",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/devices.Device"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a new device adapter instance, runs its container, and returns the device details.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "devices"
                ],
                "summary": "Add a new device",
                "parameters": [
                    {
                        "description": "Device Type",
                        "name": "device",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.addDeviceRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/devices.Device"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/devices/{deviceID}": {
            "delete": {
                "description": "Stops the device's container and removes its record from the database.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "devices"
                ],
                "summary": "Remove a device",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Device ID",
                        "name": "deviceID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "api.addDeviceRequest": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string",
                    "example": "random"
                }
            }
        },
        "devices.Device": {
            "type": "object",
            "properties": {
                "container_id": {
                    "type": "string",
                    "example": "3518d34547496f2a8c4af44be3c71d7f..."
                },
                "container_name": {
                    "type": "string",
                    "example": "adapter-EDIVRWCLGGPGCW7M"
                },
                "container_url": {
                    "type": "string",
                    "example": "EDIVRWCLGGPGCW7M.localhost"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "example": "EDIVRWCLGGPGCW7M"
                },
                "image": {
                    "type": "string",
                    "example": "registry.digitalocean.com/scadable-container-registry/adapter-mqtt:latest"
                },
                "mqtt_password": {
                    "description": "The JSON tag is changed from \"-\" to \"mqtt_password,omitempty\" to expose it.",
                    "type": "string",
                    "example": "aBc12DeF34gH56iJ"
                },
                "mqtt_user": {
                    "description": "MQTT credentials, only populated for 'mqtt' type devices.",
                    "type": "string",
                    "example": "EDIVRWCLGGPGCW7M"
                },
                "nats_subject": {
                    "type": "string",
                    "example": "devices.EDIVRWCLGGPGCW7M.telemetry"
                },
                "status": {
                    "type": "string",
                    "example": "running"
                },
                "type": {
                    "type": "string",
                    "example": "mqtt"
                }
            }
        }
    }
}